generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                    Int      @id @default(autoincrement())
  age                   Int
  tradingStyle          String
  expertiseLevel        String
  region                String
  preferredContact      String
  platformUsage         Float
  npsScore              Int
  csatScore             Int
  cesScore              Int
  recentlyReportedIssue Boolean  @default(false)
  feedbackFrequency     Int
  accountAge            Int
  lastAction            String
  deltaNps              Float
  deltaCsat             Float
  deltaCes              Float
  simulationDate        DateTime
  lastFeedbackDate      DateTime
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  feedbacks Feedback[] // One-to-many relationship with Feedback
}

model Feedback {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  content   String // Stores the feedback content
  sentiment String   @default("Neutral")
  createdAt DateTime @default(now())

  issue   Issue?  @relation(fields: [issueId], references: [id]) // Optional relation to synthesized Issue
  issueId String?
}

model Issue {
  id          String    @id @default(cuid())
  sentiment   String    @default("Neutral")
  source      String
  description String
  critical    Boolean   @default(false)
  team        String
  priority    String    @default("Medium")
  notified    Boolean   @default(false)
  notifiedAt  DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  feedbacks Feedback[] // One-to-many relationship with Feedback, synthesized from multiple feedback entries
}
